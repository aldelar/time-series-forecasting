region
| summarize parts_sold = count() by Region

region
| where Region == 'MEST'
| summarize parts_sold = sum(['Units sold per Part']) by ['Part Number']
| order by parts_sold desc

region
| where Region == 'MEST' and ['Part Number'] == 'ES3488'
| render timechart 

state
| summarize parts_sold = count() by State

state
| where State == 'NY'
| summarize parts_sold = sum(['Units sold per Part']) by ['Part Number']
| order by parts_sold desc

state
| where State == 'NY' and ['Part Number'] == 'ES3488'

state
| where State == 'NY' and ['Part Number'] == 'ES3488'
| make-series units_sold=sum(['Units sold per Part']) default=0
on ['Month-Year'] step 30.42d
by State, ['Part Number']

state
| where State == 'NY' and ['Part Number'] == 'ES3488'
| make-series
units_sold=sum(['Units sold per Part']) default=0
on ['Month-Year'] step 30.42d
by State, ['Part Number']
| extend y_decompose = series_decompose(units_sold)
| render timechart 